{"mappings":"AACgBA,SAASC,cAAc,SAG/BC,iBAAiB,UAEN,SAAEC,GACnBA,EAAMC,iBACN,IAEuBC,EAAnBF,EAAMG,cADRC,SAAYC,EAAKH,EAALG,MAAOC,EAAIJ,EAAJI,KAIfC,EAJ2BL,EAANM,OAIHC,MAGTH,EAAKG,MACJJ,EAAMI,MAYxB,SAAuBC,EAAUL,GACTM,KAAKC,SAAW,IAGpCC,YAAW,WACLC,UACFC,QAAS,uBAAwCC,OAAfN,EAAS,QAAYM,OAANX,EAAM,OAErDY,OAAM,sBAAuCD,OAAfN,EAAS,QAAYM,OAANX,EAAM,SAEtDA,GApBLa,CAAcR,SAAUL,GAExBL,EAAMG,cAAcgB,QAEpB,IAAI,IAAIC,EAAE,EAAGA,EAAEb,EAAUa,GAAG","sources":["src/js/03-promises.js"],"sourcesContent":["// Доступ до форми\nconst formRef = document.querySelector('.form');\n// const btnRef = document.querySelector(\"button\")\n\nformRef.addEventListener('submit', hanlesubmit);\n// Функція сабміту форми\nfunction hanlesubmit(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n  // console.log(event.currentTarget);\n  //  викликає функцію  стільки разів, скільки ввели в поле amount\n  const amountEl = amount.value;\n  // Під час кожного виклику передай їй номер промісу (position),\n  //  що створюється, і затримку, враховуючи першу затримку (delay), введену користувачем, і крок (step).\n  const stepEl = step.value;\n  const delayEl = delay.value;\n\n  createPromise(position, delay);\n\n  event.currentTarget.reset();\n\n  for(let i=0; i<amountEl; i+=1) {\n    \n  }\n\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  if (shouldResolve) {\n    setTimeout(() => {\n      if (isSuccess) {\n        Fulfill (`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        Reject (`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  }\n}\n\n\n// if (shouldResolve) {\n//   // Fulfill\n// } else {\n//   // Reject\n// }\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay","step","amountEl","amount","value","position","Math","random","setTimeout","isSuccess","Fulfill","concat","Reject","$ce04d3a99e08e73b$var$createPromise","reset","i"],"version":3,"file":"03-promises.4f8df00d.js.map"}